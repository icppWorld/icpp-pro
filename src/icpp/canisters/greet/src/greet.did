// ------------------------------------------------------------
// Best practice interface for forward compatibility:
//    Return a single record wrapped in a variant
type StatusCode = nat16;
type GreetingRecord = record { greeting : text };
type GreetingRecordResult = variant {
  Ok : GreetingRecord;
  Err : StatusCode;
};

// ------------------------------------------------------------

service : {
  "greet_0" : () -> (text) query;
  "greet_0_static_lib" : () -> (text) query;
  "greet_0_auth" : () -> (GreetingRecordResult) query;
  "greet_1" : () -> (int) query;
  "greet_2" : (text) -> (text) query;
  "greet_3" : (record { "icpp version" : int; OS : text }) -> (record { "icpp Release Details" : text; "release year" : int }) query;
  "greet_4" : (record { 6 : int; 9 : int }, record { 7 : int; 10 : int }) -> (text, text, int, int, int, int) query;
  "greet_json" : (text) -> (text) query;
};
